
import FiguresModel.Circle;
import FiguresModel.Figure;
import FiguresModel.Rectangulo;
import FiguresModel.Square;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.util.Random;
import javax.swing.text.Position;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ercv106
 */
public class FiguresForm extends javax.swing.JFrame {

    private Figure[] figureArray = null;
    private Figure selectedFigure = null;
    private int figureCount = 30;

    /**
     * Creates new form FiguresForm
     */
    public FiguresForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jbtnGenerate = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnMoveLeft = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnRotateRight = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnZoomIn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        pnlCanvas = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Controls"));

        jbtnGenerate.setText("Generate");
        jbtnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnGenerateActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Movement controls"));

        btnMoveLeft.setText(">");
        btnMoveLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveLeftActionPerformed(evt);
            }
        });

        jButton1.setText("<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("^");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("v");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                        .addComponent(btnMoveLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(87, 87, 87))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMoveLeft)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jButton5))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Rotation controls"));

        btnRotateRight.setText(">");
        btnRotateRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRotateRightActionPerformed(evt);
            }
        });

        jButton2.setText("<");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRotateRight, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(btnRotateRight))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Zoom controls"));

        btnZoomIn.setText(">");
        btnZoomIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZoomInActionPerformed(evt);
            }
        });

        jButton3.setText("<");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnZoomIn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnZoomIn)
                    .addComponent(jButton3))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnGenerate)
                .addGap(95, 95, 95))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtnGenerate)
                .addGap(33, 33, 33)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pnlCanvas.setBorder(javax.swing.BorderFactory.createTitledBorder("Canvas"));
        pnlCanvas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCanvasMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCanvasLayout = new javax.swing.GroupLayout(pnlCanvas);
        pnlCanvas.setLayout(pnlCanvasLayout);
        pnlCanvasLayout.setHorizontalGroup(
            pnlCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 508, Short.MAX_VALUE)
        );
        pnlCanvasLayout.setVerticalGroup(
            pnlCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(pnlCanvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlCanvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnGenerateActionPerformed
        selectedFigure = null;
        Random randomGenerator = new Random();
        figureArray = new Figure[figureCount];
        for (int i = 0; i < figureCount; i++) {
            int x = randomGenerator.nextInt(800) + 100;
            int y = randomGenerator.nextInt(800) + 100;

            if (i < 10) {
                figureArray[i] = new Circle(new Point(x, y));
            } else if (i < 20) {
                figureArray[i] = new Square(new Point(x, y));
            } else {
                figureArray[i] = new Rectangulo(new Point(x, y));
            }
        }

        ShowFigures();
    }//GEN-LAST:event_jbtnGenerateActionPerformed

    private void btnMoveLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveLeftActionPerformed
        if (selectedFigure != null) {
            if (selectedFigure instanceof Circle) {
                Circle movableFigure = (Circle) selectedFigure;
                movableFigure.Move(20, 0);
            }
        } else {
            for (int i = 0; i < figureCount; i++) {
                if (figureArray[i] instanceof Circle) {
                    Circle movableFigure = (Circle) figureArray[i];
                    movableFigure.Move(20, 0);
                }
            }
        }
        ShowFigures();
        if (selectedFigure != null) {
            if (selectedFigure instanceof Rectangulo) {
                Rectangulo movableFigure = (Rectangulo) selectedFigure;
                movableFigure.Move(20, 0);
            }
        } else {
            for (int i = 0; i < figureCount; i++) {
                if (figureArray[i] instanceof Rectangulo) {
                    Rectangulo movableFigure = (Rectangulo) figureArray[i];
                    movableFigure.Move(20, 0);
                }
            }
        }
        ShowFigures();
    }//GEN-LAST:event_btnMoveLeftActionPerformed

    private void pnlCanvasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCanvasMouseClicked
        Point p = evt.getPoint();
        selectedFigure = null;
        for (int i = 0; i < figureCount; i++) {
            if (figureArray[i].Select(p)) {
                selectedFigure = figureArray[i];
            }
        }

        ShowFigures();
    }//GEN-LAST:event_pnlCanvasMouseClicked

    private void btnRotateRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRotateRightActionPerformed
        if (selectedFigure != null) {
            if (selectedFigure instanceof Square) {
                Square rotableFigure = (Square) selectedFigure;
                rotableFigure.Rotate(3.14 / 6);
            }
        } else {
            for (int i = 0; i < figureCount; i++) {
                if (figureArray[i] instanceof Square) {
                    Square rotableFigure = (Square) figureArray[i];
                    rotableFigure.Rotate(3.14 / 6);
                }
            }
        }

        ShowFigures();
        if (selectedFigure != null) {
            if (selectedFigure instanceof Rectangulo) {
                Rectangulo rotableFigure = (Rectangulo) selectedFigure;
                rotableFigure.Rotate(3.14 / +6);
            }
        } else {
            for (int i = 0; i < figureCount; i++) {
                if (figureArray[i] instanceof Rectangulo) {
                    Rectangulo rotableFigure = (Rectangulo) figureArray[i];
                    rotableFigure.Rotate(3.14 / +6);
                }
            }
        }

        ShowFigures(); 
    }//GEN-LAST:event_btnRotateRightActionPerformed

    private void btnZoomInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZoomInActionPerformed
        if (selectedFigure != null) {
            if (selectedFigure instanceof Circle) {
                Circle scalableFigure = (Circle) selectedFigure;
                scalableFigure.Scale(20);
            } else if (selectedFigure instanceof Square) {
                Square scalableFigure = (Square) selectedFigure;
                scalableFigure.Scale(20);
            }else if (selectedFigure instanceof Rectangulo) {
                Rectangulo scalableFigure = (Rectangulo) selectedFigure;
                scalableFigure.Scale(20);
            }
        } else {
            for (int i = 0; i < figureCount; i++) {
                if (figureArray[i] instanceof Circle) {
                    Circle scalableFigure = (Circle) figureArray[i];
                    scalableFigure.Scale(20);
                } else if (figureArray[i] instanceof Square) {
                    Square scalableFigure = (Square) figureArray[i];
                    scalableFigure.Scale(20);
                }else if (figureArray[i] instanceof Rectangulo) {
                    Rectangulo scalableFigure = (Rectangulo) figureArray[i];
                    scalableFigure.Scale(20);
                }
            }
        }

        ShowFigures();
    }//GEN-LAST:event_btnZoomInActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (selectedFigure != null) {
            if (selectedFigure instanceof Circle) {
                Circle movableFigure = (Circle) selectedFigure;
                movableFigure.Move(-20, 0);
            }
        } else {
            for (int i = 0; i < figureCount; i++) {
                if (figureArray[i] instanceof Circle) {
                    Circle movableFigure = (Circle) figureArray[i];
                    movableFigure.Move(-20, 0);
                }
            }
        }
        ShowFigures();
        // TODO add your handling code here:
        if (selectedFigure != null) {
            if (selectedFigure instanceof Rectangulo) {
                Rectangulo movableFigure = (Rectangulo) selectedFigure;
                movableFigure.Move(-20, 0);
            }
        } else {
            for (int i = 0; i < figureCount; i++) {
                if (figureArray[i] instanceof Rectangulo) {
                    Rectangulo movableFigure = (Rectangulo) figureArray[i];
                    movableFigure.Move(-20, 0);
                }
            }
        }
        ShowFigures();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (selectedFigure != null) {
            if (selectedFigure instanceof Square) {
                Square rotableFigure = (Square) selectedFigure;
                rotableFigure.Rotate(3.14 / -6);
            }
        } else {
            for (int i = 0; i < figureCount; i++) {
                if (figureArray[i] instanceof Square) {
                    Square rotableFigure = (Square) figureArray[i];
                    rotableFigure.Rotate(3.14 / -6);
                }
            }
        }

        ShowFigures();        // TODO add your handling code here:
        if (selectedFigure != null) {
            if (selectedFigure instanceof Rectangulo) {
                Rectangulo rotableFigure = (Rectangulo) selectedFigure;
                rotableFigure.Rotate(3.14 / -6);
            }
        } else {
            for (int i = 0; i < figureCount; i++) {
                if (figureArray[i] instanceof Rectangulo) {
                    Rectangulo rotableFigure = (Rectangulo) figureArray[i];
                    rotableFigure.Rotate(3.14 / -6);
                }
            }
        }

        ShowFigures(); 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (selectedFigure != null) {
            if (selectedFigure instanceof Circle) {
                Circle scalableFigure = (Circle) selectedFigure;
                scalableFigure.Scale(-20);
            } else if (selectedFigure instanceof Square) {
                Square scalableFigure = (Square) selectedFigure;
                scalableFigure.Scale(-20);
            }else if (selectedFigure instanceof Rectangulo) {
                Rectangulo scalableFigure = (Rectangulo) selectedFigure;
                scalableFigure.Scale(-20);
            }
        } else {
            for (int i = 0; i < figureCount; i++) {
                if (figureArray[i] instanceof Circle) {
                    Circle scalableFigure = (Circle) figureArray[i];
                    scalableFigure.Scale(-20);
                } else if (figureArray[i] instanceof Square) {
                    Square scalableFigure = (Square) figureArray[i];
                    scalableFigure.Scale(-20);
                }else if (figureArray[i] instanceof Rectangulo) {
                    Rectangulo scalableFigure = (Rectangulo) figureArray[i];
                    scalableFigure.Scale(-20);
                }
            }
        }

        ShowFigures();        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (selectedFigure != null) {
            if (selectedFigure instanceof Circle) {
                Circle movableFigure = (Circle) selectedFigure;
                movableFigure.Move(0, -20);
            }
        } else {
            for (int i = 0; i < figureCount; i++) {
                if (figureArray[i] instanceof Circle) {
                    Circle movableFigure = (Circle) figureArray[i];
                    movableFigure.Move(0, -20);
                }
            }
        }
        ShowFigures();        // TODO add your handling code here:
        if (selectedFigure != null) {
            if (selectedFigure instanceof Rectangulo) {
                Rectangulo movableFigure = (Rectangulo) selectedFigure;
                movableFigure.Move(0, -20);
            }
        } else {
            for (int i = 0; i < figureCount; i++) {
                if (figureArray[i] instanceof Rectangulo) {
                    Rectangulo movableFigure = (Rectangulo) figureArray[i];
                    movableFigure.Move(0, -20);
                }
            }
        }
        ShowFigures();  
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (selectedFigure != null) {
            if (selectedFigure instanceof Circle) {
                Circle movableFigure = (Circle) selectedFigure;
                movableFigure.Move(0, 20);
            }
        } else {
            for (int i = 0; i < figureCount; i++) {
                if (figureArray[i] instanceof Circle) {
                    Circle movableFigure = (Circle) figureArray[i];
                    movableFigure.Move(0, 20);
                }
            }
        }
        ShowFigures();        // TODO add your handling code here:
        if (selectedFigure != null) {
            if (selectedFigure instanceof Rectangulo) {
                Rectangulo movableFigure = (Rectangulo) selectedFigure;
                movableFigure.Move(0, 20);
            }
        } else {
            for (int i = 0; i < figureCount; i++) {
                if (figureArray[i] instanceof Rectangulo) {
                    Rectangulo movableFigure = (Rectangulo) figureArray[i];
                    movableFigure.Move(0, 20);
                }
            }
        }
        ShowFigures(); 
    }//GEN-LAST:event_jButton5ActionPerformed

    private void ShowFigures() {
        if (figureArray != null) {
            Graphics g = pnlCanvas.getGraphics();
            g.clearRect(0, 0, pnlCanvas.getWidth(), pnlCanvas.getHeight());

            for (int i = 0; i < figureCount; i++) {
                figureArray[i].Show(g, Color.black);
            }

            if (selectedFigure != null) {
                selectedFigure.Show(g, Color.red);
            }
        }
    }

    @Override
    public void paint(Graphics formGraphics) {
        super.paint(formGraphics);
        ShowFigures();
        // more drawing code here...
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FiguresForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FiguresForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FiguresForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FiguresForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FiguresForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMoveLeft;
    private javax.swing.JButton btnRotateRight;
    private javax.swing.JButton btnZoomIn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton jbtnGenerate;
    private javax.swing.JPanel pnlCanvas;
    // End of variables declaration//GEN-END:variables
}
